from math import logdef create_data_set():    l_data_set = [[1, 1, 'yes'], [1, 1, 'yes'], [1, 0, 'no'], [0, 0, 'no'], [0, 0, 'no']]    l_labels = ['no surfacing', 'flippers']    return l_data_set, l_labelsdef calc_shanon_entropy(p_data_set):    l_num_entries = len(p_data_set)    l_label_counts = {}    for feat_vec in p_data_set:        l_current_label = feat_vec[-1]        if l_current_label not in l_label_counts.keys():            l_label_counts[l_current_label] = 0        l_label_counts[l_current_label] += 1    l_shanon_ent = 0.0    for key in l_label_counts:        l_prob = float(l_label_counts[key])/l_num_entries        l_shanon_ent -= l_prob * log(l_prob, 2)    return l_shanon_ent